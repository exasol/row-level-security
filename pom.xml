<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.exasol</groupId>
	<artifactId>row-level-security</artifactId>
	<version>${product.version}</version>
	<properties>
		<product.version>0.1.0</product.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8
		</project.reporting.outputEncoding>
		<java.version>9</java.version>
		<junit.version>5.4.2</junit.version>
		<junit.platform.version>1.4.2</junit.platform.version>
		<maven.surefire.version>2.22.1</maven.surefire.version>
		<vscjava.version>7.5.0</vscjava.version>
		<vscjdbc.version>1.0.1</vscjdbc.version>
	</properties>
	<repositories>
		<repository>
			<id>maven.exasol.com</id>
			<url>https://maven.exasol.com/artifactory/exasol-releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>com.exasol</groupId>
			<artifactId>virtual-schema-common-java</artifactId>
			<version>${vscjava.version}</version>
		</dependency>
		<dependency>
			<groupId>com.exasol</groupId>
			<artifactId>virtual-schema-common-jdbc</artifactId>
			<version>${vscjdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>com.exasol</groupId>
			<artifactId>virtual-schema-common-jdbc</artifactId>
			<version>${vscjdbc.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>2.23.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.12.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.7.28</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.exasol</groupId>
			<artifactId>exasol-jdbc</artifactId>
			<version>6.0.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
				<configuration>
					<!-- Set the highest log level for coverage testing, so that we have 
						a chance to reach branches in the logging lambdas too. -->
					<argLine>-Djava.util.logging.config.file=src/test/resources/logging.properties
						${argLine}
					</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>